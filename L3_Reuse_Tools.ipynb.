{
 "cells": [
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# üßë‚Äçüç≥ L3 - Organizing the tools you make for later reuse"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## üîñ Reminder: All ‚ú® generative responses result from having the model fill in the _____.\n",
    "\n",
    "![](./assets/completion.png)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "1. Grow the existing business\n",
    "2. Save money and time\n",
    "3. Add completely new business\n",
    "4. Prepare for the unknown"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 1,
   "metadata": {
    "height": 284
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "A kernel is now ready.\n"
     ]
    }
   ],
   "source": [
    "import semantic_kernel as sk\n",
    "from semantic_kernel.connectors.ai.open_ai import AzureChatCompletion, OpenAIChatCompletion\n",
    "from IPython.display import display, Markdown\n",
    "\n",
    "kernel = sk.Kernel()\n",
    "\n",
    "useAzureOpenAI = False\n",
    "\n",
    "if useAzureOpenAI:\n",
    "    deployment, api_key, endpoint = sk.azure_openai_settings_from_dot_env()\n",
    "    kernel.add_text_completion_service(\"azureopenai\", AzureChatCompletion(deployment, endpoint, api_key))\n",
    "else:\n",
    "    api_key, org_id = sk.openai_settings_from_dot_env()\n",
    "    kernel.add_text_completion_service(\"openai\", OpenAIChatCompletion(\"gpt-3.5-turbo-0301\", api_key, org_id))\n",
    "\n",
    "print(\"A kernel is now ready.\")    "
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "```directory\n",
    "plugins-sk/\n",
    "‚îÇ\n",
    "‚îî‚îÄ‚îÄ‚îÄ BusinessThinking/\n",
    "     |\n",
    "     ‚îî‚îÄ‚îÄ‚îÄ BasicStrategies/\n",
    "     |    ‚îî‚îÄ‚îÄ‚îÄ config.json\n",
    "     |    ‚îî‚îÄ‚îÄ‚îÄ skprompt.txt\n",
    "     |\n",
    "     ‚îî‚îÄ‚îÄ‚îÄ SeekCostEfficiency/\n",
    "     |    ‚îî‚îÄ‚îÄ‚îÄ config.json\n",
    "     |    ‚îî‚îÄ‚îÄ‚îÄ skprompt.txt\n",
    "     |\n",
    "     ‚îî‚îÄ‚îÄ‚îÄ SeekTimeEfficiency/\n",
    "          ‚îî‚îÄ‚îÄ‚îÄ config.json\n",
    "          ‚îî‚îÄ‚îÄ‚îÄ skprompt.txt\n",
    "```"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "**Note**, LLM's do not always produce the same results. Your results may differ from the video."
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "**Note**: To see the plugins directory, select 'file' at the top of the jupyter notebook. Then select 'open'. This will open a tab with a file directory view where you can see the plugins-sk directory and examine the files used in this lab."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "metadata": {
    "height": 267
   },
   "outputs": [
    {
     "data": {
      "text/markdown": [
       "### ‚ú® Suggestions for how to gain cost efficiencies\n",
       "| Title | Strength | Weakness | Description |\n",
       "| ----- | -------- | -------- | ----------- |\n",
       "| Cross-training staff | Strong local reputation, Owner trained in Sicily | High staff turnover | By cross-training staff in different roles, the business can reduce the need for constant hiring and training of new employees, saving on recruitment and training costs. |\n",
       "| Menu optimization | Unique garlic pizza recipe that wins top awards | Absence of popular calzones from menu | By analyzing sales data and customer feedback, the business can optimize their menu to focus on their most popular and profitable items, while also adding in-demand items like calzones to attract new customers. This can reduce food waste and increase overall profitability. |\n",
       "| Online reputation management | Strong local reputation | Negative reviews from younger demographic | By actively monitoring and responding to online reviews, the business can address negative feedback and improve their online reputation. This can attract new customers and retain existing ones, ultimately leading to increased revenue. |"
      ],
      "text/plain": [
       "<IPython.core.display.Markdown object>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "strengths = [ \"Unique garlic pizza recipe that wins top awards\",\"Owner trained in Sicily at some of the best pizzerias\",\"Strong local reputation\",\"Prime location on university campus\" ]\n",
    "weaknesses = [ \"High staff turnover\",\"Floods in the area damaged the seating areas that are in need of repair\",\"Absence of popular calzones from menu\",\"Negative reviews from younger demographic for lack of hip ingredients\" ]\n",
    "\n",
    "pluginsDirectory = \"./plugins-sk\"\n",
    "\n",
    "pluginBT = kernel.import_semantic_skill_from_directory(pluginsDirectory, \"BusinessThinking\");\n",
    "\n",
    "my_context = kernel.create_new_context()\n",
    "my_context['input'] = 'makes pizzas'\n",
    "my_context['strengths'] = \", \".join(strengths)\n",
    "my_context['weaknesses'] = \", \".join(weaknesses)\n",
    "\n",
    "costefficiency_result = await kernel.run_async(pluginBT[\"SeekCostEfficiency\"], input_context=my_context)\n",
    "costefficiency_str = str(\"### ‚ú® Suggestions for how to gain cost efficiencies\\n\" + str(costefficiency_result))\n",
    "display(Markdown(costefficiency_str))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "metadata": {
    "height": 267
   },
   "outputs": [
    {
     "data": {
      "text/markdown": [
       "## ‚ú® Business strategy thinking based on SWOT analysis\n",
       "### Building on strengths can immediately improve the business\n",
       "\n",
       "| Title | Strength | Weakness | Description |\n",
       "| ----- | -------- | -------- | ----------- |\n",
       "| Expand catering services | Strong local reputation | High staff turnover | By expanding catering services, the business can tap into a new revenue stream while also reducing the need for a large staff on site. |\n",
       "| Introduce new menu items | Unique garlic pizza recipe that wins top awards | Absence of popular calzones from menu | By introducing new menu items, such as calzones, the business can attract a wider range of customers and increase sales. |\n",
       "| Improve online presence | Prime location on university campus | Negative reviews from younger demographic for lack of hip ingredients | By improving the business's online presence and marketing efforts, it can better reach and appeal to the younger demographic and increase sales. |\n",
       "\n",
       "### Taking advantage of opportunities whenever possible\n",
       "\n",
       "| Title | Opportunity | Description |\n",
       "| ----- | -------- | ----------- |\n",
       "| Expand online ordering capabilities | Growing local tech startup community | By expanding online ordering capabilities, the business can better cater to the growing tech community and increase sales. |\n",
       "| Participate in annual food fair | Upcoming annual food fair | By participating in the annual food fair, the business can increase its exposure and attract new customers. |\n",
       "| Develop new catering partnerships | Untapped catering potential | By developing new catering partnerships, the business can tap into new revenue streams and increase sales. |\n",
       "\n",
       "### Building resilience to threats is always a good idea\n",
       "\n",
       "| Title | Threat | Description |\n",
       "| ----- | -------- | ----------- |\n",
       "| Diversify menu offerings | Rising cost of cheese will increase the cost of pizzas | By diversifying menu offerings, the business can reduce its reliance on cheese and better manage costs. |\n",
       "| Offer delivery services | There's nearby street construction that will impact foot traffic | By offering delivery services, the business can still reach customers despite the impact of street construction on foot traffic. |\n",
       "| Focus on customer loyalty | Competition from cheaper pizza businesses nearby | By focusing on customer loyalty and providing excellent service and quality, the business can differentiate itself from cheaper competitors and retain customers. |"
      ],
      "text/plain": [
       "<IPython.core.display.Markdown object>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "opportunities = [ \"Untapped catering potential\",\"Growing local tech startup community\",\"Unexplored online presence and order capabilities\",\"Upcoming annual food fair\" ]\n",
    "threats = [ \"Competition from cheaper pizza businesses nearby\",\"There's nearby street construction that will impact foot traffic\",\"Rising cost of cheese will increase the cost of pizzas\",\"No immediate local regulatory changes but it's election season\" ]\n",
    "\n",
    "pluginBT = kernel.import_semantic_skill_from_directory(pluginsDirectory, \"BusinessThinking\");\n",
    "\n",
    "my_context = kernel.create_new_context()\n",
    "my_context['input'] = 'makes pizzas'\n",
    "my_context['strengths'] = \", \".join(strengths)\n",
    "my_context['weaknesses'] = \", \".join(weaknesses)\n",
    "my_context['opportunities'] = \", \".join(opportunities)\n",
    "my_context['threats'] = \", \".join(threats)\n",
    "\n",
    "bizstrat_result = await kernel.run_async(pluginBT[\"BasicStrategies\"],input_context=my_context)\n",
    "bizstrat_str = \"## ‚ú® Business strategy thinking based on SWOT analysis\\n\"+str(bizstrat_result)\n",
    "display(Markdown(bizstrat_str))"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Another way to think of it is the famous \"bucket of time\" and \"bucket of money\" depiction of a business owner.\n",
    "\n",
    "![](./assets/shopkeeper.png)\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "height": 29
   },
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3 (ipykernel)",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.9.17"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 4
}
